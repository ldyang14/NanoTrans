---
title: ""
format: 
  html:
    toc: true
    number-sections: true
    embed-resources: true
    page-layout: full
params:
  wkdir: "../"
  dataset: "Batch_Example"
---

<br>
<br>
<br>

![](../../NanoTrans.logo.png){fig-align="center" width=50%}


```{r setup, include=FALSE}
options(digits = 4)
knitr::opts_chunk$set(
  echo    = FALSE, 
  message = FALSE, 
  warning = FALSE, 
  error   = FALSE, 
  comment = NA, 
  cache   = FALSE, 
  out.width="100%", 
  out.height="500px",
  fig.align = 'center'
)

```


```{r load}

library(data.table)
library(dplyr)
library(DT)
#qmd_dir <- getwd()
```

```{r functions}
# test read file
test_read_file <- function(filepath) {
  tryCatch({
    fread(filepath)
  }, error = function(e) {
    print("file not exists")
  })
}


# test print file
test_print_plots <- function(filepath) {
  if(length(filepath) > 0) {
    knitr::include_graphics(filepath)
  } else {
    print("The file does not exist.")
  }
}

```

```{r vars}

output_dir <- params$wkdir
batch_id   <- params$dataset
#batch_id <- "Batch_Dataset2"
dt_outputs <- data.table(
  Module_01_mapping       = c("01.Reference_Genome_based_Read_Mapping",        batch_id, "table",  "all_samples.coverage_summary.txt"),
  Module_02_quantify      = c("02.Isoform_Clustering_and_Quantification",      batch_id, "table",  ".*.all_samples_combined.counts_matrix.tidy.txt$"),
  Module_03_deg_table     = c("03.Isoform_Expression_and_Splicing_Comparison", batch_id, "table",  ".*.differential_gene_expression.tidy.txt$"),
  Module_03_dei_table     = c("03.Isoform_Expression_and_Splicing_Comparison", batch_id, "table",  ".*.differential_isoform_expression.tidy.txt$"),
  Module_03_diu_table     = c("03.Isoform_Expression_and_Splicing_Comparison", batch_id, "table",  ".*.differential_isoform_usage.tidy.txt$"),
  Module_03_deg_volcano   = c("03.Isoform_Expression_and_Splicing_Comparison", batch_id, "figure", ".*.differential_gene_expression.tidy.for_plot.volcanoplot.pdf$"),
  Module_03_dei_volcano   = c("03.Isoform_Expression_and_Splicing_Comparison", batch_id, "figure", ".*.differential_isoform_expression.tidy.for_plot.volcanoplot.pdf$"),
  Module_04_mod_table     = c("04.Isoform_RNA_Modification_Identification",    batch_id, "figure", ".*.rna_modification.majority_direction_kmer_diffmod.table.tidy.filtered.txt$"),
  Module_04_mod_top_figs  = c("04.Isoform_RNA_Modification_Identification",    batch_id, "figure", ".*.rna_modification.majority_direction_kmer_diffmoddiff_RNA_mod.*.top20.pdf$"),
  Module_04_mod_char_figs = c("04.Isoform_RNA_Modification_Identification",    batch_id, "figure", "plot.*.pdf$"),
  Module_05_polya_table   = c("05.Isoform_PolyA_Tail_Length_Profiling",        batch_id, "figure", ".*.all_samples_combined.polya_profiling.summary.txt$"),
  Module_05_polya_figs    = c("05.Isoform_PolyA_Tail_Length_Profiling",        batch_id, "figure", "*.polya_tail_length.*_length.*_plot.pdf$"),
  Module_06_genefus_figs  = c("06.Gene_Fusion_Detection",                      batch_id, "figure", ".*.gene_fusion_plot.pdf$")
)

```


```{r read-output-tables}
master_table <- paste0("Master_Sample_Table.", batch_id, ".txt")
tryCatch({
  dt_sample <- fread(master_table)
}, error = function(e) {
  print("file not exists")
})

outputs_list <- lapply(
  1:ncol(dt_outputs),
  function(x) {
    list.files(
      #path    = paste0(output_dir, paste(unlist(dt_outputs[1:2, ..x]), collapse = "/")),
      path    = file.path(output_dir, unlist(dt_outputs[1:2, ..x])[1], unlist(dt_outputs[1:2, ..x])[2]),
      pattern = unlist(dt_outputs[4, ..x]), 
      recursive = TRUE, 
      full.names = TRUE
    )
  }
)
names(outputs_list) <- colnames(dt_outputs)

```

# Introduction

The primary results generated by NanoTrans are presented below. Users can explore these results to obtain a preliminary understanding, such as volcano plots showing differentially expressed genes. Moreover, users can retrieve information on differential expression, differential isoform usage, etc., by entering the gene name of interest in the search box at the top right corner of the corresponding table. Please feel free to contact us if you have any questions about using [NanoTrans](https://github.com/yjx1217/NanoTrans).

# Experimental Design

```{r show-experimental-design}
if(!is.character(dt_sample)) {
  knitr::kable(dt_sample)
} else {
  print("Master sample table does not exist.")
}
```

# Results


## Files

:::{.panel-tabset}
## Mapping Summary
```{r mapping-summary-table}
dt_mapping <- test_read_file(outputs_list$Module_01_mapping)
if(!is.character(dt_mapping)) knitr::kable(dt_mapping[, c(1,3,4,5,2)])
```
## Isoform Quantification
```{r isoform-quant-table}
#print(paste0("The file path is ", sub(output_dir, "", outputs_list$Module_02_quantify)))
dt_quantify <- test_read_file(outputs_list$Module_02_quantify)
#knitr::kable(head(dt_quantify), digits = 4)
if(!is.character(dt_quantify)) datatable(dt_quantify) 
```

## Differentially Expressed Genes (DEGs)
```{r genes-comparison-table}
dt_degs <- test_read_file(outputs_list$Module_03_deg_table)
if(!is.character(dt_degs)) datatable(dt_degs) %>% formatRound(5:7, 2)
```
## Differentially Expressed Isoforms (DEIs)
```{r isoform-comparison-table}
dt_deis <- test_read_file(outputs_list$Module_03_dei_table)
if(!is.character(dt_deis)) datatable(dt_deis) %>% formatRound(5:7, 2)
```
## Differentially Spliced Isoforms Table
```{r isoform-comparison-splicing-table}
dt_dsis <- test_read_file(outputs_list$Module_03_diu_table)
if(!is.character(dt_dsis)) datatable(dt_dsis) %>% formatRound(5:8, 2)
```
:::

## Figures

:::{.panel-tabset}
## DEGs
```{r}
#| fig-cap: ""
test_print_plots(outputs_list$Module_03_deg_volcano)
```

## DEIs
```{r}
test_print_plots(outputs_list$Module_03_dei_volcano)
```

## RNA Modifications
```{r}
test_print_plots(outputs_list$Module_04_mod_char_figs)
```
## Top diff Kmers
```{r}
test_print_plots(outputs_list$Module_04_mod_top_figs)
```
## Comparison of PolyA Lengths
```{r}
test_print_plots(outputs_list$Module_05_polya_figs)
```
## Fusion Genes
```{r}
if(length(outputs_list$Module_06_genefus_figs) > 0) {
  knitr::include_graphics(outputs_list$Module_06_genefus_figs[[1]])
} else {
  print("The file does not exist.")
}
```
:::

